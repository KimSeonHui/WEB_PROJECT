<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>비밀번호 찾기</title>
    <!-- Favicon-->
    <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
    <!-- Font Awesome icons (free version)-->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" 
    integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm" crossorigin="anonymous">
    <!-- Google fonts-->
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet" type="text/css" />
    <link href="https://fonts.googleapis.com/css?family=Lato:400,700,400italic,700italic" rel="stylesheet" type="text/css" />
  
    <!-- Core theme CSS (includes Bootstrap)-->
    <link href="/css/styles.css" rel="stylesheet" >

    <!-- Bootstrap core JS-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js" ></script>
    <!-- Core theme JS-->
    <script src="/js/scripts.js"></script>
    <script src="https://cdn.startbootstrap.com/sb-forms-latest.js"></script>       
  </head>

  <body class="form-signup-body">
    <div class="text-center mt-5 mb-4">
        <a href="/main"><img class="" src="/static/company_logo.svg" alt="" width="200" height="60"></a>
        <h3 class="h3">비밀번호 찾기</h3>
    </div>
   <div class="container">
        <main class="form-signup border">           
            <div>
                <form class="needs-validation" action="/user/findPW" method="POST" id="form" novalidate onsubmit="return findPW()">
                    <div class="row mb-4">
                        <div class="col-12 form-floating">
                            <input type="email" class="form-control" id="email" name="email" placeholder="you@example.com" required>
                            <label for="email">Email</label>
                            <div class="invalid-feedback">
                                이메일이 유효하지 않습니다
                            </div>
                            <input type="hidden" name="authcode" value="0" id="hasCode">
                        </div>
                        <div class="col-6 form-floating" >
                            <input type="text" class="form-control" id="code" name="code" required>
                            <label for="code">인증번호</label>
                            <div class="invalid-feedback">
                                인증번호를 입력해 주세요
                            </div>
                        </div>
                        <div class="col-6 pt-5 pb-0" >
                            <button class="btn btn-primary" type="button" onclick="sendEmail()">인증번호 전송</button>
                            <p class="ms-3 fs-5" id="timer" style="display:none; vertical-align: middle;"></p>
                        </div>
                    </div>
                    <button class="w-100 btn btn-primary btn-lg" type="submit" id="submit">확인</button>
                </form>

                <!--form data 유효성 검사-->                
                <script>
                   (function () {
                       'use strict'

                       // Fetch all the forms we want to apply custom Bootstrap validation styles to
                       var forms = document.querySelectorAll('.needs-validation')

                       // Loop over them and prevent submission
                       Array.prototype.slice.call(forms)
                       .forEach(function (form) {
                           form.addEventListener('submit', function (event) {
                           if (!form.checkValidity()) {
                               event.preventDefault()
                               event.stopPropagation()
                           }

                           form.classList.add('was-validated')
                           }, false)
                       })
                   })()
               </script>

               <!--서버로 이메일 전송 전송-->
               <script>
                    let interval;
                    function sendEmail() {     
                        const email = document.getElementById('email'); 
                        startTimer();       
                        sendEmailAjax();
                    }

                    function startTimer() {
                        clearInterval(interval);
                        const timer = document.getElementById('timer');
                        let min = 3;
                        let sec = 0;

                        timer.style.display = 'inline';
                        
                        interval = setInterval(function() {
                            if(sec === 0 && min > 0) {
                                min--;
                                sec = 59;
                            }
                            if(min === 0 && sec === 0) {
                                timer.innerText = `${min} : ${sec}`;
                                return false;
                            }
                            timer.innerText = `${min} : ${sec}`;
                            sec--;
                        }, 1000);                      
                    }

                    function serializeFormData() {
                        const allInput = document.querySelectorAll('#form input');
                        let data = {};

                        for(let i = 0; i <allInput.length; i++) {
                            data[allInput[i].name] = allInput[i].value;
                        }
                        console.log(data);
                        return data;
                    }

                    function sendEmailAjax() {
                        const data = serializeFormData();

                        return fetch('/user/findPW', {
                            method : 'POST',
                            headers : {'Content-Type' : 'application/json' },
                            body : JSON.stringify(data),
                        })
                        .then(res => res.json()) 
                        .then(result => {     
                            document.getElementById('hasCode').value = result;
                            console.log('input value', document.getElementById('hasCode').value)
                        })
                        .catch(err => {
                            alert('인증번호 전송이 실패했습니다.');
                            console.log('error : ', err);
                        })
                    }

                    //인증번호 + 이메일 전송
                    function findPW() {
                        sendSubmitAjax();
                        return false;
                    }

                    function sendSubmitAjax() {
                        const data = serializeFormData();

                        return fetch('/user/findPW', {
                            method : 'POST',
                            headers : {'Content-Type' : 'application/json' },
                            body : JSON.stringify(data),
                        })
                        .then(res => res.json()) 
                        .then(result => {     
                            console.log('fetch result', result);
                            if(!result) {
                                alert('인증코드가 잘못 되었습니다.\n다시 확인해주세요.');
                            } else {
                                alert('비밀번호가 a123456789로 초기화되었습니다.');
                                window.location='/user/login';
                            }
                        })
                        .catch(err => {
                            alert('제출이 실패했습니다.');
                            console.log('error : ', err);
                        })
                    }
               </script>
            </div>
        </main>
   </div>

  </body>
</html>
