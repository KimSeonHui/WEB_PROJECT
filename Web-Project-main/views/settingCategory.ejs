<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>Admin</title>
    <!-- Favicon-->
    <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
    <!-- Font Awesome icons (free version)-->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" 
    integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm" crossorigin="anonymous">
    <!-- Google fonts-->
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet" type="text/css" />
    <link href="https://fonts.googleapis.com/css?family=Lato:400,700,400italic,700italic" rel="stylesheet"
        type="text/css" />

    <!-- Core theme CSS (includes Bootstrap)-->
    <link href="/css/styles.css" rel="stylesheet">

    <!-- Bootstrap core JS-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Core theme JS-->
    <script src="/js/scripts.js"></script>
    <script src="https://cdn.startbootstrap.com/sb-forms-latest.js"></script>

    <!--jsTree-->
    <link rel="stylesheet"
        href="https://cdn.jsdelivr.net/npm/jstree-bootstrap-theme@1.0.1/dist/themes/proton/style.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>
</head>
<!--상단바-->
<header class="navbar navbar-dark sticky-top bg-dark flex-md-nowrap py-1 shadow justify-content-start">
    <a class="navbar-brand col-md-3 col-lg-2 me-0 px-3 text-light" href="/">company name</a>
    <button class="navbar-toggler d-md-none ms-auto collapsed" type="button" data-bs-toggle="collapse"
        data-bs-target="#sidebarMenu" aria-controls="sidebarMenu" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <!--로그인 상태창 - 세션 정보에 따라 처리 - 글쓰기 버튼도 같이 처리-->
    <!--로그인o -->
    <% if(session.user) {%>
        <div class="text-nowrap ms-auto" id="loginStatus">
            <ul class="mb-0 ps-0" style="list-style: none;">
                <li class="nav-item mx-0 mx-lg-1 dropdown">
                    <a class="btn font-weight-bold btn-outline-secondary text-white rounded" id="logOutDropdown"
                        role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <%= session.user %>님
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end bg-secondary" aria-labelledby="logOutDropdown">
                        <% if(session.authority === 2) {%>
                            <li class="dropdown-item"><a class="nav-link py-3 px-0 px-lg-3 rounded" href="/setting">관리</a></li>
                            <li class="dropdown-item"><a class="nav-link py-3 px-0 px-lg-3 rounded" href="/user/changePW">비밀번호 변경</a></li>
                            <li class="dropdown-item"><a class="nav-link py-3 px-0 px-lg-3 rounded" href="/user/logout">로그아웃</a></li>
                        <%}%>        
                    </ul>
                </li>
            </ul>
        </div>
        <%}%>
</header>

<body>
<div class="container-fluid" id="description">
    <div class="row">
        <!-- 게시판 side bar-->
        <nav id="sidebarMenu" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
            <div class="sidebar-sticky">
                <ul class="nav flex-column">
                    <li class="d-flex justify-content-center py-2" style="border-bottom:#D0CDCD solid 0.07rem;">
                        <a class="text-dark fs-4" href="/setting?order=UID"> 메뉴얼 관리</a>
                    </li>
                    <li class="dropdown-item"><a class="text-dark nav-link" href="/setting/category"><i class="fas fa-list-ul me-2"></i>  카테고리</a></li>
                    <li class="dropdown-item"><a class="text-dark  nav-link" href="/setting/post?order=category&page=1&filter=no"><i class="far fa-file-alt me-2"></i>   게시글</a></li>
                    <li class="dropdown-item"><a class="text-dark  nav-link" href="/setting/user"><i class="far fa-user me-2"></i>  회원</a></li>
                </ul>
            </div>
        </nav>

        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div
                class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h6 class="h6 text-muted">
                    category
                </h6>
            </div>
             <!--카테고리 관리 페이지-->
             <form action="/category" method="post">
            </form>

            <section>
                <div class="container-fluid d-flex justify-content-center">
                    <div class="d-flex flex-column align-items-center mt-5">
                        <input class="form-control mb-2" id="categorySearch" type="text" style="width: 400px;" placeholder="카테고리 검색">
                        <div style="border: black solid; width: 400px;">                              
                            <div class="text-center">
                                <p class="text-white py-2" style="background-color: #212529;;">카테고리 전체보기</p>
                            </div>
                                <div class="ps-3 pb-3 show-scroll" id="categories" style="overflow-x: auto;"></div>   
                        </div>
                    </div>

                    <div class="ms-5 mt-5">
                        <form action="/setting/category" method="post">
                            <div class="d-flex justify-content-between mb-3">
                                <button class="btn btn-outline-secondary mb-2 me-2" id="btnAddCategory" type="button" >카테고리 추가</button>
                                <button class="btn btn-outline-secondary mb-2 me-2" id="btnRemoveCategory" type="button">카테고리 삭제</button>
                                <button class="btn btn-outline-secondary mb-2" id="btnSave" type="submit">저장</button>
                            </div>
                            <div class="d-flex align-items-center">
                                <label for="categoryName" class="form-label me-3 text-nowrap">카테고리명</label>
                                <input class="form-control" type="text" id="categoryName" name="categoryName" value="">
                                <input class="form-control" type="hidden" id="allCategories" name="allCategories" value="">
                            </div>
                        </form>   
                    </div>
                </div>
                    

                <script>
                    let categories = <%-JSON.stringify(category)%>;
                    console.log(categories);
                    $('#categories').jstree({ 
                           'plugins' :["search" , "dnd", "contextmenu"],
                           'contextmenu' : {
                                'items' : function ($node) {
                                    let ref = $('#categories').jstree(true);
                                    return {
                                        'Create' : {
                                            'separator_before' : false,
                                            'separator_after'  : true,
                                            'label'           : "Create",
                                            'action'           : function (obj) { createNode(); }                                          
                                        },
                                        'Rename': {
                                            'separator_before': false,
                                            'separator_after': false,
                                            'label': 'Rename',
                                            'action': function (obj) {  ref.edit($node);  }                                  
                                        },
                                        'Remove': {
                                            'separator_before': false,
                                            'separator_after': false,
                                            'label': "Remove",
                                            'action': function (obj) {  deleteNode(); }                                              
                                        }
                                    }
                                }
                           },
                           'core' : {
                               'check_callback' : true,
                               'data' : <%-JSON.stringify(category)%>,
                               'themes' : {
                                   'name' : 'proton',
                                   'responsive' : true
                               }
                           }
                       });

                    const ref = $('#categories').jstree(true);

                       //jstree 로드 시 전체 노드 펼치기
                       $('#categories').on('loaded.jstree', function() {
                           ref.open_all();
                       });  

                       //카테고리 검색
                       let to = false;
                       $('#categorySearch').keyup(function () {
                           if(to) {
                               clearTimeout(to);
                           }
                           to = setTimeout(function () {
                               let value = $('#categorySearch').val();
                               ref.search(value);
                           }, 250);
                       }); 

                       //버튼으로 노드 생성
                       $('#btnAddCategory').click(function() {
                           createNode();
                        });

                        function createNode() {
                            let selectedNode = ref.get_selected(true);
                            let currentNodes = null;
                            let newNodeId = 0;

                           if(!selectedNode.length) { //대분류 추가
                                currentNodes = Object.values(ref._model.data);
                                newNodeId = ref.create_node(currentNodes[currentNodes.length - 1], 
                                        {
                                            'id' : String(Number(currentNodes[currentNodes.length - 2].id)  + 1),
                                            'parent' : currentNodes[currentNodes.length - 1].id,
                                            'text' : 'New Node',
                                            'data' : {'level' : '0'}
                                        }
                                );
                            }
                            else {  //중분류, 소분류 추가
                                selectedNode = selectedNode[0];
                                if(selectedNode.data.level === '2'){
                                    alert('더 이상 하위 카테고리를 생성할 수 없습니다');
                                }
                                else {
                                    currentNodes = Object.values(ref._model.data);
                                    newNodeId = ref.create_node(selectedNode, 
                                            {
                                                'id' : String(Number(currentNodes[currentNodes.length - 2].id)  + 1),
                                                'parent' : selectedNode.id,
                                                'text' : 'New Node',
                                                'data' : {'level' : String(Number(selectedNode.data.level) + 1)}
                                            }
                                    );
                                }
                            }

                           
                            ref.deselect_node(selectedNode.id);
                            ref.select_node(newNodeId);
                            $('#categoryName')[0].value = ref.get_node(newNodeId).text;
                        }
                       
                        //버튼으로 노드 삭제
                        $('#btnRemoveCategory').click(function() {
                            deleteNode();
                        });

                        function deleteNode() {
                            let selectedNode = ref.get_selected(true);
                                                           
                            if(!selectedNode.length) {
                                return false;
                            }

                            selectedNode = selectedNode[0];
                            if(selectedNode.children.length !== 0) {
                                const msg = '하위 카테고리와 글도 모두 삭제 됩니다.\n카테고리를 삭제하시겠습니까?';
                                if(confirm(msg)) {
                                    ref.delete_node(selectedNode.id);
                                }
                                else {
                                    return false;
                                }
                            }
                            else {
                                ref.delete_node(selectedNode.id);
                            }
                        }

                        
                        // 선택된 카테고리 이름이 input에 반영
                        $('#categories').on('select_node.jstree', function() {
                            const selectedNodeId = ref.get_selected();
                            $('#categoryName')[0].value = ref.get_node(selectedNodeId).text;
                        });

                        //input으로 카테고리 이름 변경
                        $('#categoryName').on('change', function() {
                            const selectedNodeId = ref.get_selected();
                            ref.get_node(selectedNodeId).text = $('#categoryName')[0].value;
                            ref.edit(selectedNodeId);

                        });
                        
                        
                        $('#categories').on('rename_node.jstree', function(e, data) {
                            $('#categoryName')[0].value = data.text;
                        });


                        //저장
                        $('#btnSave').click(function() {
                            let allCategories = Object.values(ref._model.data);

                            const updateInfo = [];
                            for(let i = 0; i < allCategories.length - 1; i++) {
                                const data = {
                                    id: `${allCategories[i].id}`,
                                    parent: `${allCategories[i].parent}`,
                                    text: `${allCategories[i].text}`,
                                    data: { level: `${allCategories[i].data.level}` } 
                                };
                                updateInfo.push(data);
                            }
                            $('#allCategories')[0].value = JSON.stringify(updateInfo);
                        });
               </script>
            </section>              
        </main>
    </div>
</div>
</body>
</html>